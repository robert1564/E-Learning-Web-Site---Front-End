void ies(int x,int y)

{if(a[x][y]==0)

   {k++;

    a[x][y]=2;

    d[k].x=x;

    d[k].y=y;

    if((x<1)||(x>m)||(y<1)||(y>n))

             tipar(k);

    else

          {ies(x-1,y);

            ies(x,y+1);

            ies(x+1,y);

            ies(x,y-1);

       }

    a[x][y]=0;    //la revenire din apel demarchez celula pentru a o putea

                        //accesa si in cadrul altei prelucrari

    k--;              //eliberez componenta din vectorul drumului

    }

}

 

Fie urmatorul labirint: m=6 n=10 Li=4, Ci=3

 

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 0 0 0 0 0 0 0 0

1 1 1 1 1 1 1 0 1 1

1 1 1 1 1 1 1 0 1 1

 

Solutiile vor fi:

 

solutia 1

 

(4,3) (4,4) (4,5) (3,5) (2,5) (1,5) (0,5)

 

1 1 1 1 2 1 1 1 1 1

1 1 1 1 2 1 1 1 1 1

1 1 1 1 2 1 1 1 1 1

1 1 2 2 2 0 0 0 0 0

1 1 1 1 1 1 1 0 1 1

1 1 1 1 1 1 1 0 1 1

 

solutia 2

 

(4,3) (4,4) (4,5) (4,6) (4,7) (4,8) (4,9) (4,10) (4,11)

 

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 2 2 2 2 2 2 2 2

1 1 1 1 1 1 1 0 1 1

1 1 1 1 1 1 1 0 1 1

 

solutia 3

 

(4,3) (4,4) (4,5) (4,6) (4,7) (4,8) (5,8) (6,8) (7,8)

 

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 1 1 0 1 1 1 1 1

1 1 2 2 2 2 2 2 0 0

1 1 1 1 1 1 1 2 1 1

1 1 1 1 1 1 1 2 1 1